user www-data;
worker_processes  8;

# [ debug | info | notice | warn | error | crit ]
error_log  /var/log/nginx/error.log error;

#pid        logs/nginx.pid;

events {
    worker_connections  1024;
}

http {
#    passenger_root /var/lib/gems/1.8/gems/passenger-3.0.7;
#    passenger_ruby /usr/bin/ruby;
#    passenger_max_pool_size 10;
    
    # карта редиректов на язык etapasvi.com        
    include /home/chroot/etapasvicom/home/etapasvicom/etapasvi.com/www/nginx_culture_redirect_map.conf;

    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #log_format  web_log  '$http_x_real_ip - $remote_user [$time_local] "$request" '
    #                     '$status $body_bytes_sent "$http_referer" '
    #                     '"$http_user_agent" "$http_x_forwarded_for"';
    
    #access_log  logs/access.log  main;
    access_log  off;

    ## Size Limits
    client_body_buffer_size     128K;
    client_header_buffer_size   1M;
    #client_max_body_size        5M; # rabotaet i pri zagruzke failov
    large_client_header_buffers 8 8k;
 
    ## Timeouts
    client_body_timeout   30;
    client_header_timeout 30;
    keepalive_timeout     25 25;
    send_timeout          30;
    reset_timedout_connection on;
 
    ## General Options
    ignore_invalid_headers   on;
    keepalive_requests      100;
    #limit_zone one $binary_remote_addr 5m;
    recursive_error_pages    on;
    sendfile                 on;
    server_name_in_redirect off;
    #tcp_nopush       on;
    #tcp_nodelay      on;
    #send_lowat       12000;

    # privelo k tomu, chto ne podgruzhalis .css i .js
    #limit_conn  one 1;

    ## Security
    # do not show server version on error pages and Server header
    # v ngx_http_header_filter_module.c "Server" zameneno na "Apache"
    server_tokens off;
    
    ## DOS
    # Реализация ограничения на количество запросов к динамическим страницам с одного IP.
    # Разрешено 10 запросов в секунду с одного IP с возможными пиками до 30 запросов.
    limit_req_zone $binary_remote_addr zone=one:10m rate=30r/s;
    #limit_req zone=one burst=30 nodelay;
    
    ## Gzip
    gzip  on;
    gzip_types text/plain text/css text/xml application/x-javascript application/atom+xml;
    gzip_comp_level 3;
    
    ## Proxy caching options
    proxy_temp_path            /usr/local/nginx/proxy_temp/ 1 2;
    proxy_cache_path           /usr/local/nginx/proxy_cache/ levels=1:2 keys_zone=cache:10m inactive=10m max_size=500M;
    
    ## Fast cgi cache options
    fastcgi_temp_path  /usr/local/nginx/fastcgi_temp 1 2;
    fastcgi_cache_path /usr/local/nginx/fastcgi_cache/ levels=1:2 keys_zone=fastcgi_cache:16m max_size=256m inactive=1d;

    ## tasks.etapasvi.com
    upstream thin
    {
        server unix:/tmp/redmine.0.sock;
    }
    server {
        listen   80; ## listen for ipv4
        server_name  tasks.etapasvi.com;
        root   /home/lint/tasks.etapasvi.com/public;

        #access_log  /home/lint/tasks.etapasvi.com/log/access.log;
        error_log  /home/lint/tasks.etapasvi.com/log/server.error.log;
        
        # максимум запросов в секунду с IP
        limit_req zone=one burst=100 nodelay;

        client_max_body_size        5M; # rabotaet i pri zagruzke failov
  
        ## Only allow these request methods
        if ($request_method !~ ^(GET|HEAD|POST)$ ) {
            return 444;
        }

        # zapret dostupa po IP
        if ($host !~* ^(tasks.etapasvi.com)$ ) {
            return 444;
        }

        # do not send scripts
        location ~* \.(rb|cgi|fcgi|php|htaccess|htpasswd)$ {
            #return 403;
            deny  all;
        }
        # otdaem statiku - lubie faily, krome failov v direktorii /attachments/ - oni otadayutsya CMS
        location ~ ^(?!/attachments/).*\..*$ {
           expires 7d;
        }

        # Запрос отдаётся Ruby
        location / {
            #auth_basic "Private zone";
            #auth_basic_user_file /home/lint/.htpasswd;
            #passenger_enabled on;

            # peredacha upravlenia FCGI serveru Thin
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
           
            if (!-f $request_filename) {
                proxy_pass http://thin;
                break;
            }                       
        }
        
        # Ошибки 50x
        error_page   500 502 503 504  /50x.html;
        
        location = /50x.html {
            root   html;
        }
        
        # Статус nginx
        location /nginx_status_tasks {
            stub_status on;
            #allow 31.186.97.60;
            #deny all;
        }
    }
    
    # etapasvi.com
    # Балансировщик бэкенда (полная версия)
    upstream etapasvi_balancer_back_www  {        
        server back1.www.etapasvi.com;
    }
    server {
        listen   80;
        server_name  back.www.etapasvi.com;
        
        proxy_next_upstream       timeout invalid_header http_500 http_502 http_503 http_504;

        ## Proxy caching options
        # Пока кэширование запрещаем
        proxy_cache                off;

        location / {
            proxy_pass http://etapasvi_balancer_back_www;
        }
    }
    # Балансировщик бэкенда (мобильная версия)
    upstream etapasvi_balancer_back_m  {        
        server back1.m.etapasvi.com;
    }
    server {
        listen   80;
        server_name  back.m.etapasvi.com;
        
        proxy_next_upstream       timeout invalid_header http_500 http_502 http_503 http_504;

        ## Proxy caching options
        # Пока кэширование запрещаем
        proxy_cache                off;

        location / {
            proxy_pass http://etapasvi_balancer_back_m;
        }
    }

    # etapasvi.com
    # Веб
    server {
        # Номер веба
        set $web_number 2;
        
        # Путь к веб-директории
        set $root /home/chroot/etapasvicom/home/etapasvicom/etapasvi.com/www;    

        # Подключение конфигурации веба
        include /home/chroot/etapasvicom/home/etapasvicom/etapasvi.com/www/nginx_web.conf;
        
        # Лог доступа
        #access_log  /home/chroot/etapasvicom/home/etapasvicom/etapasvi.com/log/access.log;
        
        # Лог ошибок
        error_log /home/chroot/etapasvicom/home/etapasvicom/etapasvi.com/log/server.error.log;                        
    }
    
    ## forum
    server {
        listen   80;
        server_name  forum.etapasvi.com;
        
        set $root_hardcode "/home/lint/forum.etapasvi.com/www";
        
        root   $root_hardcode;

        #access_log  /home/lint/forum.etapasvi.com/log/server.access.log;
        error_log  /home/lint/forum.etapasvi.com/log/server.error.log;       
        
        # максимум запросов в секунду с IP
        limit_req zone=one burst=100 nodelay;

        client_max_body_size        5M; # rabotaet i pri zagruzke failov
  
        ## Only allow these request methods
        if ($request_method !~ ^(GET|HEAD|POST)$ ) {
            return 444;
        }

        # zapret dostupa po IP
        if ($host !~* ^(forum.etapasvi.com)$ ) {
            return 444;
        }

        # do not send scripts
        location ~* \.(rb|cgi|fcgi|htaccess|htpasswd)$ {
            deny  all;
        }

        
        # Отдаётся статика        
        location / {
            # Кэширование
            expires 1d;
        }
        
        # На форуме включена перезапись URL
        # Передача управления PHP, если запрошен PHP-файл или в запросе нет точки и если не запрошен статус nginx
        location ~ ^(((?!nginx_status_forum)[^\.])*|.*\.php.*)$ {
            # Редирект на версию языка, соответствующую языку установленному в браузере:
            # 1 - находимся на главной странице (строка запроса равна / или /forum.php или /index.php)
            # 2 - если пользователь не авторизован (нет куки et_sessionhash)
            # 3 - нет куки et_languageid
            # 4 - форум поддерживает язык, установленный в браузере пользователя
            set $culture "";
            set $redirect_to_culture 0;

            # 1 - находимся на главной странице (строка запроса равна / или /forum.php или /index.php)
            if ($request_uri ~ "^(/|/forum.php|/index.php)/?$") {
                set $redirect_to_culture 1;
            }
            # 2 - если пользователь не авторизован (нет куки vb_sessionhash)
            if ($cookie_et_sessionhash = "") {
                set $redirect_to_culture "${redirect_to_culture}2";
            }
            # 3 - нет куки vb_languageid
            if ($cookie_et_languageid = "") {
                set $redirect_to_culture "${redirect_to_culture}3";
            }
            # определение языка, установленного в браузере пользователя
            if ($http_accept_language ~ ^ru.*) { set $culture 23; }
#            if ($http_accept_language ~ ^en.*) { set $culture ; }
#            if ($http_accept_language ~ ^cs.*) { set $culture ; }
            if ($http_accept_language ~ ^hu.*) { set $culture 24; }
            if ($http_accept_language ~ ^pl.*) { set $culture 11; }
            if ($http_accept_language ~ ^fr.*) { set $culture 13; }
            if ($http_accept_language ~ ^zh.*) { set $culture 16; }
            if ($http_accept_language ~ ^vi.*) { set $culture 17; }
            if ($http_accept_language ~ ^es.*) { set $culture 18; }
            if ($http_accept_language ~ ^it.*) { set $culture 19; }
            if ($http_accept_language ~ ^pt.*) { set $culture 28; }

#            map $http_accept_language  $ulture {
#                default   "";
#                ~^ru.*     23;
##                ~^en.*     ;
##                ~^cs.*     ;
##                ~^hu.*     ;
#                ~^pl.*     11;
#                ~^fr.*     13;
#               ~^zh.*     16;
#                ~^vi.*     17;
##                ~^ja.*     ;
#                ~^es.*     18;
#                ~^it.*     19;
##                ~^et.*     ;
#            }
            # 4 - форум поддерживает язык, установленный в браузере пользователя
            if ($culture) {
                set $redirect_to_culture "${redirect_to_culture}4";
            }

            if ($redirect_to_culture = "1234") {
                rewrite  ^(.*)$  http://${host}${request_uri}?langid=${culture} permanent;
            }
                    
            # определение названия скрипта, которому будет передано управление
            if ($request_uri ~ "^/threads/((?!\.php).)*$") {
                rewrite  ^/threads/(.*)$  /showthread.php?$1 last;
            }
            if ($request_uri ~ "^/forums/((?!\.php).)*$") {
                rewrite  ^/forums/(.*)$  /forumdisplay.php?$1  last;
            }
            if ($request_uri ~ "^/members/((?!\.php).)*$") {
                rewrite  ^/members/(.*)$  /member.php?$1  last;
            }
              
            # настройка и передача управления fastcgi
            include fastcgi_params;
            
            # первое становиться значением переменной $fastcgi_script_name, а второе — значением переменной $fastcgi_path_info
            fastcgi_split_path_info ^(.+\.php)(.*)$;
            
            # проверка, существует ли скрипт, необходима, т.к.
            # если при передаче управления fastcgi оказывается, что скрипта нет
            # тот не возвращает управление nginx, а отдаёт пользователю свою 404 ошибку            
            if ( !-f $root_hardcode/$fastcgi_script_name ) {
                return 404;
            }
            
            # без этого будем получать "No input file specified"
            fastcgi_param  SCRIPT_FILENAME  $root_hardcode/$fastcgi_script_name;
            #fastcgi_param  DOCUMENT_ROOT /www/htdocs;
            #fastcgi_param  SERVER_NAME $hostname;
            fastcgi_param  PATH_INFO $fastcgi_path_info;
                
            fastcgi_index  index.php;            
            fastcgi_ignore_client_abort off;
            fastcgi_connect_timeout 180;
            fastcgi_send_timeout 180;
            fastcgi_read_timeout 250;
            
            # Кэши работает, если
            # 1 - запрошен не cron.php
            # 2 - нет куки et_sessionhash (пользователь не авторизован)            
            # При этом куки не кэшируются и учитывается кука языка ()
            set $cache_off 1;
            set $cache_criteria "";
            #if ($request_uri ~ "^(/|/forum.php.*|/index.php.*)/?$") {
            if ($request_uri !~ "^/cron.php.*$") {
                set $cache_criteria "1";
            }
            if ($cookie_et_sessionhash = "") {
                set $cache_criteria "${cache_criteria}2";
            }
            # разрешаем кэш и запрещаем получать от fast cgi куки
            if ($cache_criteria = "12") {
                set $cache_off 0;
            }           
                        
            # без этого страницы не кэшируются
            fastcgi_ignore_headers Cache-Control Expires Set-Cookie;
            fastcgi_cache_key "$request_method|$host|$request_uri|$cookie_et_languageid";
            fastcgi_cache fastcgi_cache;
            # случаи при которых будет использован старый кэш
            fastcgi_cache_use_stale updating error timeout invalid_header http_500;
            # Время жизни кеша
            fastcgi_cache_valid 1m;
            # скрывать никаких заголовков не надо
            #fastcgi_hide_header "Set-Cookie";
            # надо указывать обе директивы
            fastcgi_no_cache $cache_off;            
            fastcgi_cache_bypass $cache_off;            
                     
            fastcgi_pass   unix:/tmp/php-cgi.sock;
        }
        
        # Ощибки 400
        error_page   400 401 403 404  /404.php;        
        
        # Ошибки 500
        error_page   500 502 503 504  /50x.html;        
        location = /50x.html {
            root   html;
        }
        
        # Статус nginx
        location /nginx_status_forum {
            stub_status on;
            #allow 31.186.97.60;
            #deny all;
        }                
    }
    
    ## web2.etapasvi.com - statika
    ## Сюда попадаем, если файл гарантированно имеется на сервере
    ## Доступ из браузера: web2.etapasvi.com:8080/ru/ (слэш на конце обязателен)
    #server {
    #    # esli ukazat 80, to budet oshibka: 
    #    # socket() failed (24: Too many open files) while connecting to upstream, client: 31.186.97.60, server: etapasvi.com, 
    #    # request: "GET /ru/    HTTP/1.0", upstream: "http://31.186.97.60:80/ru/", host: "www.etapasvi.com"
    #    listen   8080; 
    #
    #    server_name  web2.etapasvi.com;
    #    root /home/lint/etapasvi.com/www;
    #
    #    #access_log  /home/lint/etapasvi.com/log/access.log web_log;
    #    error_log /home/lint/etapasvi.com/log/server.error.log;
    #    
    #    # номер веба
    #    add_header Web 2;       
    #    
    #    # Статика
    #    location ~ ^.*\..*$ {
    #        # Кэширование
    #        expires 1d;
    #    }
    #    
    #    # Отдаётся страница
    #    location / {                       
    #        # Кэширование на час
    #        expires 1h;
    #        # чтобы можно было обратиться к вебу из браузера
    #        if ($host = 'web2.etapasvi.com') {
    #            #rewrite  ^/(.*)$  http://cache/www.etapasvi.com/$1i.html  break;
    #            rewrite  ^/(.*)$  /cache/www.etapasvi.com/$1i.html  break;
    #        }
    #        if ($host != 'web2.etapasvi.com') {
    #            rewrite  ^/(.*)$  /cache/$host/$1i.html  break;
    #        }
    #    }       
    #    
    #    # Ощибки 400
    #    error_page   400 401 403 404  /404.html;        
    #    location = /404.html {
    #        root   /home/lint/etapasvi.com/www/errors;
    #    }
    #
    #    # Ошибки 500
    #    error_page   500 502 503 504  /500.html;       
    #    location = /500.html {
    #        root   /home/lint/etapasvi.com/www/errors;
    #    }
    #    
    #    # status nginx
    #    location /nginx_status_web {
    #        stub_status on;
    #        #allow 31.186.97.60;
    #        #deny all;
    #    }
    #}   

    # обработка остальных запросов (например, по IP) - не помогло
    #server {
    #    listen   80; 
    #    server_name  ~^(.*)$;
    #
    #    return 444;
    #
    #    #set $domain "xxx/$1"
    #}
    
}
